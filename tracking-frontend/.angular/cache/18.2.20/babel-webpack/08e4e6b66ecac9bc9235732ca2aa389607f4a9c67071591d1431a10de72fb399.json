{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../core/services/orders.service';\nimport { ClientsService } from '../../core/services/clients.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction OrderCreateComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(c_r1.name);\n  }\n}\nfunction OrderCreateComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nexport let OrderCreateComponent = /*#__PURE__*/(() => {\n  class OrderCreateComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.ordersSvc = inject(OrdersService);\n      this.clientsSvc = inject(ClientsService);\n      this.router = inject(Router);\n      this.loading = false;\n      this.error = '';\n      this.clients = [];\n      this.form = this.fb.group({\n        product: ['', Validators.required],\n        clientId: ['', Validators.required],\n        address: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.clientsSvc.list().subscribe(cs => this.clients = cs);\n    }\n    submit() {\n      this.loading = true;\n      this.error = '';\n      this.ordersSvc.create(this.form.value).subscribe({\n        next: o => this.router.navigate(['/orders', o.id]),\n        error: _err => {\n          this.error = 'Error creando pedido';\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function OrderCreateComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OrderCreateComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OrderCreateComponent,\n        selectors: [[\"app-order-create\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 16,\n        vars: 4,\n        consts: [[1, \"card\", 3, \"ngSubmit\", \"formGroup\"], [\"formControlName\", \"product\"], [\"formControlName\", \"clientId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"address\"], [3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [3, \"value\"], [1, \"error\"]],\n        template: function OrderCreateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Nuevo pedido\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function OrderCreateComponent_Template_form_ngSubmit_2_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(3, \"label\");\n            i0.ɵɵtext(4, \"Producto \");\n            i0.ɵɵelement(5, \"input\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"label\");\n            i0.ɵɵtext(7, \"Cliente \");\n            i0.ɵɵelementStart(8, \"select\", 2);\n            i0.ɵɵtemplate(9, OrderCreateComponent_option_9_Template, 2, 2, \"option\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"label\");\n            i0.ɵɵtext(11, \"Direcci\\u00F3n \");\n            i0.ɵɵelement(12, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"button\", 5);\n            i0.ɵɵtext(14, \"Crear\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, OrderCreateComponent_p_15_Template, 2, 1, \"p\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.clients);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n        styles: [\".card[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.5rem;max-width:420px}\"]\n      });\n    }\n  }\n  return OrderCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}