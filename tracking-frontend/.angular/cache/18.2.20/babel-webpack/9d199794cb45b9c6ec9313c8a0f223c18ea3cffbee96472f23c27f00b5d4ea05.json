{"ast":null,"code":"var __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../core/services/orders.service';\nimport { ClientsService } from '../../core/services/clients.service';\nlet OrderCreateComponent = (() => {\n  let _classDecorators = [Component({\n    standalone: true,\n    selector: 'app-order-create',\n    imports: [CommonModule, ReactiveFormsModule],\n    template: `\n    <h2>Nuevo pedido</h2>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"card\">\n      <label>Producto <input formControlName=\"product\" /></label>\n      <label>Cliente\n        <select formControlName=\"clientId\">\n          <option *ngFor=\"let c of clients\" [value]=\"c.id\">{{c.name}}</option>\n        </select>\n      </label>\n      <label>Direcci√≥n <input formControlName=\"address\" /></label>\n      <button [disabled]=\"form.invalid || loading\">Crear</button>\n      <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\n    </form>\n  `,\n    styles: [`.card{display:flex;flex-direction:column;gap:.5rem;max-width:420px}`]\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var OrderCreateComponent = class {\n    static {\n      _classThis = this;\n    }\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.ordersSvc = inject(OrdersService);\n      this.clientsSvc = inject(ClientsService);\n      this.router = inject(Router);\n      this.loading = false;\n      this.error = '';\n      this.clients = [];\n      this.form = this.fb.group({\n        product: ['', Validators.required],\n        clientId: ['', Validators.required],\n        address: ['', Validators.required]\n      });\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      OrderCreateComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    ngOnInit() {\n      this.clientsSvc.list().subscribe(cs => this.clients = cs);\n    }\n    submit() {\n      this.loading = true;\n      this.error = '';\n      this.ordersSvc.create(this.form.value).subscribe({\n        next: o => this.router.navigate(['/orders', o.id]),\n        error: _ => {\n          this.error = 'Error creando pedido';\n          this.loading = false;\n        }\n      });\n    }\n  };\n  return OrderCreateComponent = _classThis;\n})();\nexport { OrderCreateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}