{"ast":null,"code":"var __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nimport { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nlet StatusBadgeComponent = (() => {\n  let _classDecorators = [Component({\n    standalone: true,\n    selector: 'status-badge',\n    imports: [CommonModule],\n    template: `<span class=\"badge\" [class.warn]=\"warn\" [class.ok]=\"ok\">{{ text }}</span>`,\n    styles: [`.badge{padding:2px 8px;border-radius:999px;border:1px solid #ccc}\n            .warn{background:#fff5e6;border-color:#f0ad4e}\n            .ok{background:#e8f5e9;border-color:#5cb85c}`]\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  let _text_decorators;\n  let _text_initializers = [];\n  let _text_extraInitializers = [];\n  let _warn_decorators;\n  let _warn_initializers = [];\n  let _warn_extraInitializers = [];\n  let _ok_decorators;\n  let _ok_initializers = [];\n  let _ok_extraInitializers = [];\n  var StatusBadgeComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      _text_decorators = [Input()];\n      _warn_decorators = [Input()];\n      _ok_decorators = [Input()];\n      __esDecorate(null, null, _text_decorators, {\n        kind: \"field\",\n        name: \"text\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"text\" in obj,\n          get: obj => obj.text,\n          set: (obj, value) => {\n            obj.text = value;\n          }\n        },\n        metadata: _metadata\n      }, _text_initializers, _text_extraInitializers);\n      __esDecorate(null, null, _warn_decorators, {\n        kind: \"field\",\n        name: \"warn\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"warn\" in obj,\n          get: obj => obj.warn,\n          set: (obj, value) => {\n            obj.warn = value;\n          }\n        },\n        metadata: _metadata\n      }, _warn_initializers, _warn_extraInitializers);\n      __esDecorate(null, null, _ok_decorators, {\n        kind: \"field\",\n        name: \"ok\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"ok\" in obj,\n          get: obj => obj.ok,\n          set: (obj, value) => {\n            obj.ok = value;\n          }\n        },\n        metadata: _metadata\n      }, _ok_initializers, _ok_extraInitializers);\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      StatusBadgeComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    constructor() {\n      this.text = __runInitializers(this, _text_initializers, '');\n      this.warn = (__runInitializers(this, _text_extraInitializers), __runInitializers(this, _warn_initializers, false));\n      this.ok = (__runInitializers(this, _warn_extraInitializers), __runInitializers(this, _ok_initializers, false));\n      __runInitializers(this, _ok_extraInitializers);\n    }\n  };\n  return StatusBadgeComponent = _classThis;\n})();\nexport { StatusBadgeComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}